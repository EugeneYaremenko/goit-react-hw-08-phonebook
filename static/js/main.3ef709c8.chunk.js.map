{"version":3,"sources":["redux/contacts/contactsActions.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Wrapper/Wrapper.js","PrivateRoute.js","PublicRoute.js","routes.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","components/Spinner/Spinner.js","components/Navigation/Navigation.module.css","redux/auth/authReducer.js","components/UserMenu/UserMenu.module.css","redux/auth/authActions.js","components/Wrapper/wrapper.module.css","components/Spinner/Spinner.module.css","components/AppBar/appBar.module.css"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","connect","state","isAuthenticated","authSelectors","className","styles","nav","to","style","activeStyle","exact","link","display","textDecoration","padding","fontWeight","color","activeLink","AuthNav","name","getUserName","avatar","onLogout","authOperations","logOut","container","src","alt","width","Spinner","height","Button","onClick","type","variant","header","Wrapper","children","wrapper","Component","component","routeProps","render","props","restricted","path","label","lazy","private","App","this","onGetCurrentUser","fallback","routes","map","route","key","getCurrentUser","items","createReducer","contactsActions","action","payload","filter","contact","id","loading","combineReducers","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","responce","data","registerSuccess","catch","error","registerError","message","logIn","loginRequest","response","loginSuccess","logoutError","logoutRequest","logoutSuccess","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","spinner","module","exports","initialUserState","email","registerSucces","_","loginError"],"mappings":"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","file":"static/js/main.3ef709c8.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactsRequest = createAction('contacts/removeRequest');\r\nconst removeContactsSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactsError = createAction('contacts/removeError');\r\n\r\nconst changeFilter = createAction('contacts/change');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  changeFilter,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css'\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav className={styles.nav}>\r\n    <NavLink to=\"/\" style={styles} activeStyle={styles} exact>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        style={styles}\r\n        activeStyle={styles}\r\n        exact\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n      exact\r\n    >\r\n      Register\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/login\"\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n      exact\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport styles from './UserMenu.module.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n    <span className={styles.name}>\r\n      Welcome, {!name ? <Spinner width={20} height={20} /> : name}\r\n    </span>\r\n\r\n    <Button\r\n      onClick={onLogout}\r\n      type=\"button\"\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    'https://icon-library.net/images/avatar-icon-images/avatar-icon-images-7.jpg',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './appBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './wrapper.module.css';\r\nimport AppBar from '../AppBar/AppBar';\r\n\r\nconst Wrapper = ({ children }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <AppBar />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n/* import withAuth from './components/hoc/withAuth'; */\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from './redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => {\r\n      return isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\n/* export default withAuth(PrivateRoute); */\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n/* import withAuth from './components/hoc/withAuth'; */\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from './redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => {\r\n      return isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\n/* export default withAuth(PublicRoute); */\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/HomeView.js')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/RegisterView.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/LoginView.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/ContactsView.js')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport PublicRoute from '../PublicRoute';\r\nimport Spinner from './Spinner/Spinner';\r\nimport routes from '../routes';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n\r\n/* import HomeView from '../views/HomeView';\r\nimport ContactsView from '../views/ContactsView';\r\nimport LoginView from '../views/LoginView'; */\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Wrapper>\r\n          <Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n              {routes.map(route => {\r\n                return route.private ? (\r\n                  <PrivateRoute key={route.label} {...route} />\r\n                ) : (\r\n                  <PublicRoute\r\n                    key={route.label}\r\n                    {...route}\r\n                    restricted={route.restricted}\r\n                  />\r\n                );\r\n              })}\r\n              {/*  <PublicRoute\r\n                path=\"/\"\r\n                exact\r\n                component={HomeView}\r\n                restricted={false}\r\n              />\r\n              <PublicRoute\r\n                path=\"/login\"\r\n                exact\r\n                component={LoginView}\r\n                restricted={true}\r\n              />\r\n              <PrivateRoute path=\"/contacts\" exact component={ContactsView} /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </Wrapper>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.removeContactsSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n\r\n  [contactsActions.removeContactsRequest]: () => true,\r\n  [contactsActions.removeContactsSuccess]: () => false,\r\n  [contactsActions.removeContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  FLUSH,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './components/base.css';\nimport App from './components/App';\nimport Spinner from './components/Spinner/Spinner';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Spinner />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(responce => {\r\n      token.set(responce.data.token);\r\n      dispatch(authActions.registerSuccess(responce.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error.message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = ({ width = 80, height = 80 }) => {\r\n  return (\r\n    <div className={styles.spinner}>\r\n      <Loader type=\"ThreeDots\" color=\"#3F51B5\" width={width} height={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nexport default Spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__YMTFi\",\"link\":\"Navigation_link__1j2A3\",\"activeLink\":\"Navigation_activeLink__16sxu\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSucces]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSucces]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1hrx2\",\"avatar\":\"UserMenu_avatar__16m1T\",\"name\":\"UserMenu_name__2GB39\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n\r\n\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper_wrapper__2trmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__3er9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"appBar_header__s4Cv3\"};"],"sourceRoot":""}